{"version":3,"file":"static/js/631.d4f92c26.chunk.js","mappings":"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","sources":["components/services/searchApi.js","components/services/toasts.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\n// axios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nconst API_KEY = '9beeda1ea4aae4d04f0fe1c9b0b0fd1d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst IMG_BASE_URL = `https://image.tmdb.org/t/p`;\n\nexport const searchImages = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w400${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport const searchCastImage = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w200${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport async function searchMovies(query) {\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      query: `${query}`,\n      include_adult: 'false',\n    },\n  });\n\n  return data;\n}\n\nexport async function getTrending() {\n  const { data } = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: `${API_KEY}`,\n      page: 1,\n    },\n  });\n  return data;\n}\n\nexport async function getMovieDetails(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieCast(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data;\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSettings = {\n  theme: 'colored',\n};\n\nexport const toastSuccess = () => {\n  return toast.success(\n    'Hooray! We found what you were looking for ðŸ¤—',\n    toastSettings\n  );\n};\nexport const toastInfoNothing = () => {\n  return toast.info(\n    'It looks like you want to find nothing, please check your query ðŸ˜•',\n    toastSettings\n  );\n};\nexport const toastInfoDuplication = () => {\n  return toast.info(\n    'It looks like there are already movies found for your request, please check if this will be a new search ðŸ¤”',\n    toastSettings\n  );\n};\nexport const toastWarn = () => {\n  return toast.warn(\n    'Sorry, nothing was found for your request, try something else ðŸ™ˆ',\n    toastSettings\n  );\n};\nexport const toastError = () => {\n  return toast.error(\n    'Oops, something went wrong, please try again ðŸ™Š',\n    toastSettings\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackButtom = styled.button`\n  font-weight: bold;\n  font-size: 24px;\n  color: ${p => p.theme.colors.text};\n  background-color: ${p => p.theme.colors.bg_dark};\n  height: 48px;\n  width: 120px;\n  border-radius: 5px;\n  margin: 20px 0px 0px 160px;\n  border: ${p => p.theme.borders.none};\n  transition: ${p => p.theme.transition.cubicBezier};\n\n  &:hover {\n    transform: ${p => p.theme.transform.scaleThird};\n  }\n`;\n\nexport const MovieDetailsStyle = styled.div`\n  display: flex;\n  margin: 20px 160px;\n\n  img {\n    max-height: 400px;\n  }\n\n  & h2 {\n    color: ${p => p.theme.colors.primary};\n  }\n\n  & p {\n    margin: 20px 20px 20px 0px;\n    font-size: 18px;\n    text-align: justify;\n  }\n`;\n\nexport const MovieDetailsTitle = styled.span`\n  font-weight: bold;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n\n  margin-left: 160px;\n  margin-right: 160px;\n`;\n\nexport const NavItemLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 24px;\n  background-color: ${p => p.theme.colors.bg_dark};\n  height: 48px;\n  width: 120px;\n  border-radius: 5px;\n  margin: 0 6px;\n  color: ${p => p.theme.colors.text};\n  border: ${p => p.theme.borders.none};\n  transition: ${p => p.theme.transition.cubicBezier};\n\n  &:hover {\n    transform: ${p => p.theme.transform.scaleThird};\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useNavigate, useParams, useLocation } from 'react-router-dom';\nimport {\n  getMovieDetails,\n  searchImages,\n} from '../../components/services/searchApi';\n\nimport { toastError } from '../../components/services/toasts';\n\nimport { Box } from '../../components/Box';\nimport {\n  NavList,\n  MovieDetailsStyle,\n  MovieDetailsTitle,\n  GoBackButtom,\n  NavItemLink,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovie).catch(toastError);\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres, release_date } =\n    movie;\n\n  const imgPoster = searchImages(poster_path);\n\n  const goBack = () => navigate(from);\n\n  const isCast = location.pathname.includes('cast');\n  const castLink = isCast ? `/movies/${movieId}` : `/movies/${movieId}/cast`;\n\n  const isReviews = location.pathname.includes('reviews');\n  const reviewsLink = isReviews\n    ? `/movies/${movieId}`\n    : `/movies/${movieId}/reviews`;\n\n  return (\n    <>\n      <main style={{ flexGrow: '1' }}>\n        <GoBackButtom onClick={goBack}>Go back</GoBackButtom>\n        <MovieDetailsStyle>\n          <img src={imgPoster} alt={title} />\n          <Box ml=\"20px\">\n            <h2>\n              {title} ({new Date(release_date).getFullYear()})\n            </h2>\n            <p>\n              <MovieDetailsTitle>Rating: </MovieDetailsTitle>\n              {vote_average.toFixed(1)}\n            </p>\n            <p>\n              <MovieDetailsTitle>Overview: </MovieDetailsTitle>\n              {overview}\n            </p>\n            <p>\n              <MovieDetailsTitle>Genres: </MovieDetailsTitle>\n              {genres.map(genre => (\n                <span key={genre.id}> {genre.name}</span>\n              ))}\n            </p>\n          </Box>\n        </MovieDetailsStyle>\n        <NavList>\n          <li>\n            <NavItemLink state={{ from }} to={castLink}>\n              Cast\n            </NavItemLink>\n          </li>\n          <li>\n            <NavItemLink state={{ from }} to={reviewsLink}>\n              Reviews\n            </NavItemLink>\n          </li>\n        </NavList>\n      </main>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["API_KEY","BASE_URL","IMG_BASE_URL","searchImages","poster","searchMovies","query","axios","params","api_key","language","include_adult","data","getTrending","page","getMovieDetails","id","getMovieCast","getMovieReviews","toastSettings","theme","toastSuccess","toast","toastInfoNothing","toastError","GoBackButtom","styled","p","colors","text","bg_dark","borders","none","transition","cubicBezier","transform","scaleThird","MovieDetailsStyle","primary","MovieDetailsTitle","NavList","NavItemLink","Link","MovieDetails","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","from","state","useEffect","then","catch","poster_path","title","vote_average","overview","genres","release_date","imgPoster","castLink","pathname","includes","reviewsLink","style","flexGrow","onClick","src","alt","Box","ml","Date","getFullYear","toFixed","map","genre","name","to"],"sourceRoot":""}