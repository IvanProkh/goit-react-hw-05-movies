{"version":3,"file":"static/js/219.d15ab644.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/services/DelayedRender.js","components/services/searchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 20px 160px;\n\n  div {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    padding: 6px;\n  }\n\n  img {\n    max-width: 200px;\n  }\n\n  p {\n    max-width: 200px;\n    word-wrap: break-word;\n    text-align: center;\n  }\n`;\n\nexport const EmptyCast = styled.p`\n  margin: 20px 0px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n","// import { searchCastImage } from '../Cast/Cast';\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { ThreeCirclesStyle } from '../../components/services/spinner';\nimport { DelayedRender } from '../services/DelayedRender';\n\nimport { getMovieCast, searchImages } from '../services/searchApi';\nimport { CastList, EmptyCast } from './Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  // const [showEmptyCast, setShowEmptyCast] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    let timeoutId;\n    setLoading(true);\n\n    async function fetchData() {\n      try {\n        const res = await getMovieCast(movieId);\n        setCast(res.cast);\n      } catch (error) {\n        console.log(error);\n      }\n      timeoutId = setTimeout(() => setLoading(false), 300);\n    }\n\n    fetchData();\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <ThreeCircles {...ThreeCirclesStyle} />}\n      {cast && cast.length > 0 ? (\n        <CastList>\n          {cast.map(({ cast_id, character, name, profile_path }) => {\n            const profileImage = searchImages(profile_path);\n            return (\n              <div key={cast_id}>\n                <img src={profileImage} alt={name} />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </div>\n            );\n          })}\n        </CastList>\n      ) : (\n        <DelayedRender delay={300}>\n          <EmptyCast>\n            ❗❗❗Sorry, it seems that there is currently no information about\n            the actors❗❗❗\n          </EmptyCast>\n        </DelayedRender>\n      )}\n    </>\n  );\n}\n\n// export const Cast = () => {\n//   const [cast, setCast] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const { movieId } = useParams();\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       setLoading(true);\n//       try {\n//         const res = await getMovieCast(movieId);\n//         setCast(res.cast);\n//       } catch (error) {\n//         console.log(error);\n//       }\n//       setTimeout(() => setLoading(false), 300);\n//     }\n\n//     fetchData();\n\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [movieId]);\n\n// useEffect(() => {\n//   getMovieCast(movieId)\n//     .then(res => {\n//       setCast(res.cast);\n//       setLoading(true);\n//     })\n//     .catch(error => {\n//       console.log(error);\n//     })\n//     .finally(setLoading(false));\n\n//   console.log(cast);\n//   console.log(movieId);\n//   // eslint-disable-next-line react-hooks/exhaustive-deps\n// }, [movieId]);\n\n// if (!cast) {\n//   return;\n// }\n\n//   return (\n//     <>\n//       {loading && <ThreeCircles {...ThreeCirclesStyle} />}\n//       {cast && cast.length > 0 ? (\n//         <CastList>\n//           {cast.map(({ cast_id, character, name, profile_path }) => {\n//             const profileImage = searchImages(profile_path);\n//             return (\n//               <div key={cast_id}>\n//                 <img src={profileImage} alt={name} />\n//                 <p>{name}</p>\n//                 <p>Character: {character}</p>\n//               </div>\n//             );\n//           })}\n//         </CastList>\n//       ) : (\n//         <EmptyCast>\n//           ❗❗❗Sorry, it seems that there is currently no information about the\n//           actors❗❗❗\n//         </EmptyCast>\n//       )}\n//     </>\n//   );\n// };\n","import { useState, useEffect } from 'react';\n\nexport const DelayedRender = ({ children, delay }) => {\n  const [shouldRender, setShouldRender] = useState(false);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setShouldRender(true);\n    }, delay);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [delay]);\n\n  return shouldRender ? children : null;\n};\n","import axios from 'axios';\n\n// axios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nconst API_KEY = '9beeda1ea4aae4d04f0fe1c9b0b0fd1d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst IMG_BASE_URL = `https://image.tmdb.org/t/p`;\n\nexport const searchImages = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w400${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport const searchCastImage = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w200${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport async function searchMovies(query) {\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      query: `${query}`,\n      include_adult: 'false',\n      // page: `${currentPage}`,\n    },\n  });\n\n  return data;\n}\n\nexport async function getTrending() {\n  const { data } = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: `${API_KEY}`,\n      page: 1,\n    },\n  });\n  return data;\n}\n\nexport async function getMovieDetails(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieCast(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data;\n}\n"],"names":["CastList","styled","EmptyCast","p","theme","fontSizes","m","Cast","useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","timeoutId","getMovieCast","res","console","log","setTimeout","fetchData","clearTimeout","ThreeCirclesStyle","length","map","cast_id","character","name","profile_path","profileImage","searchImages","src","alt","DelayedRender","delay","children","shouldRender","setShouldRender","API_KEY","BASE_URL","IMG_BASE_URL","poster","searchMovies","query","axios","params","api_key","language","include_adult","data","getTrending","page","getMovieDetails","id","getMovieReviews"],"sourceRoot":""}