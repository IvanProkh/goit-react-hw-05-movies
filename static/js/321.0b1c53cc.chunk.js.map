{"version":3,"file":"static/js/321.0b1c53cc.chunk.js","mappings":"sNAEaA,EAAkBC,EAAAA,GAAAA,GAAH,oMAMnB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAMGC,EAAgBJ,EAAAA,GAAAA,GAAH,8LAEX,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IACA,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,WAAWC,WAAvB,IAEA,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,UAAUC,UAAtB,I,SCdH,SAASC,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAClC,OACE,SAACb,EAAD,UACGa,EAAKC,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAChBC,GAAYC,EAAAA,EAAAA,IAAaF,GAE/B,OADAG,QAAQC,IAAIH,IAEV,SAAC,KAAD,CAAMI,GAAE,kBAAaP,GAArB,UACE,UAACV,EAAD,YACE,gBAAKkB,IAAKL,EAAWM,IAAKR,KAC1B,uBAAIA,QAHwBD,EAOnC,KAGN,C,2NClBKU,EAAU,mCACVC,EAAW,+BAEXC,EAAY,6BAELR,EAAe,SAAAS,GAC1B,OAAkB,OAAXA,EAAA,UACAD,EADA,gBACoBC,GACvB,gEACL,EAQM,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBC,EAAAA,EAAAA,IAAA,UAAaL,EAAb,iBAAsC,CAC3DM,OAAQ,CACNC,QAAQ,GAAD,OAAKR,GACZS,SAAU,QACVJ,MAAM,GAAD,OAAKA,GACVK,cAAe,WANd,uBACGtB,EADH,EACGA,KADH,kBAWEA,GAXF,kEAcA,SAAeuB,IAAtB,4CAAO,OAAP,oBAAO,sGACkBL,EAAAA,EAAAA,IAAA,UAAaL,EAAb,uBAA4C,CACjEM,OAAQ,CACNC,QAAQ,GAAD,OAAKR,GACZY,KAAM,KAJL,uBACGxB,EADH,EACGA,KADH,kBAOEA,GAPF,kEAUA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BvB,GAA/B,yFACkBgB,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA+BX,GAAM,CAC1DiB,OAAQ,CACNC,QAAQ,GAAD,OAAKR,GACZS,SAAU,WAJT,uBACGrB,EADH,EACGA,KADH,kBAOEA,GAPF,kEAUA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BxB,GAA5B,yFACkBgB,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA+BX,EAA/B,YAA6C,CAClEiB,OAAQ,CACNC,QAAQ,GAAD,OAAKR,GACZS,SAAU,WAJT,uBACGrB,EADH,EACGA,KADH,kBAOEA,GAPF,kEAUA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,yFACkBgB,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA+BX,EAA/B,YAA6C,CAClEiB,OAAQ,CACNC,QAAQ,GAAD,OAAKR,GACZS,SAAU,QACVG,KAAM,KALL,uBACGxB,EADH,EACGA,KADH,kBAQEA,GARF,kE,sHC9DD4B,G,QAAgB,CACpBtC,MAAO,YAGIuC,EAAe,WAC1B,OAAOC,EAAAA,GAAAA,QACL,0DACAF,EAEH,EACYG,EAAmB,WAC9B,OAAOD,EAAAA,GAAAA,KACL,+EACAF,EAEH,EAaYI,EAAa,WACxB,OAAOF,EAAAA,GAAAA,MACL,4DACAF,EAEH,C,mKClCYK,E,QAAa7C,GAAAA,KAAH,mqBAWG,SAAAC,GAAC,OAAIA,EAAEC,MAAM4C,OAAOC,OAAnB,IAKZ,SAAA9C,GAAC,OAAIA,EAAEC,MAAM4C,OAAOE,IAAnB,IACA,SAAA/C,GAAC,OAAIA,EAAEC,MAAM+C,QAAQC,IAApB,IAGA,SAAAjD,GAAC,OAAIA,EAAEC,MAAM4C,OAAOK,OAAnB,IAQD,SAAAlD,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IAMJ,SAAAL,GAAC,OAAIA,EAAEC,MAAM+C,QAAQC,IAApB,IAGI,SAAAjD,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,I,SCxBL,SAAS8C,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOxB,EAAP,KAAcyB,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAoCA,OAhCAC,EAAAA,EAAAA,YAAU,WACH9B,KAILD,EAAAA,EAAAA,IAAaC,GAAO+B,MAAK,SAAAC,GACvB1C,QAAQC,IAAIyC,GACZH,GAAW,GAEe,IAAtBG,EAAIC,gBACNnB,EAAAA,EAAAA,MAEEkB,EAAIC,cAAgB,IACtBrB,EAAAA,EAAAA,MAGFsB,YAAW,YACTnC,EAAAA,EAAAA,IAAaC,EAAMmC,QAChBJ,MAAK,SAAAC,GACJ1C,QAAQC,IAAIyC,GACZL,EAAUK,EAAII,QACf,IACAC,MAAMtB,EAAAA,IACNuB,SAAQ,WACPT,GAAW,EACZ,GACJ,GAAE,IACJ,IAEDA,GAAW,GACZ,GAAE,CAAC7B,KAGF,+BACE,iBAAMuC,MAAO,CAAEC,SAAU,KAAzB,UACE,UAACxB,EAAD,CACEyB,SAAU,SAAAC,GACRA,EAAMC,iBACNlB,EAASiB,EAAME,cAAcC,cAAc,SAASC,OACpDxD,QAAQC,IAAIS,EACb,EALH,WAOE,4BACE,kBACEmB,KAAK,OACL4B,aAAa,MACbC,WAAS,EACTC,KAAK,SAELC,YAAY,qBAEd,mBAAQD,KAAK,SAAb,UACE,gBACEE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,QAAQ,YALV,UAOE,iBAAMC,EAAE,2WAIb5B,IAAW,SAAC,MAAD,UAAkB6B,EAAAA,KAClB,IAAX/B,IAAoB,SAAC5C,EAAA,EAAD,CAAWC,KAAM2C,UAK/C,C","sources":["components/FilmsList/FilmsList.styled.js","components/FilmsList/FilmsList.js","components/services/searchApi.js","components/services/toasts.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmsListStyled = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  gap: ${p => p.theme.space[5]}px;\n\n  margin-left: 160px;\n  margin-right: 160px;\n`;\n\nexport const FilmsListItem = styled.li`\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n  transition: ${p => p.theme.transition.cubicBezier};\n  &:hover {\n    transform: ${p => p.theme.transform.scaleFirst};\n  }\n  & p {\n    max-width: 400px;\n    word-wrap: break-word;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { searchImages } from '../services/searchApi';\nimport { FilmsListStyled, FilmsListItem } from '../FilmsList/FilmsList.styled';\n\nexport default function FilmsList({ data }) {\n  return (\n    <FilmsListStyled>\n      {data.map(({ id, title, poster_path }) => {\n        const imgPoster = searchImages(poster_path);\n        console.log(imgPoster);\n        return (\n          <Link to={`/movies/${id}`} key={id}>\n            <FilmsListItem>\n              <img src={imgPoster} alt={title} />\n              <p>{title}</p>\n            </FilmsListItem>\n          </Link>\n        );\n      })}\n    </FilmsListStyled>\n  );\n}\n\nFilmsList.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\n// axios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nconst API_KEY = '9beeda1ea4aae4d04f0fe1c9b0b0fd1d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst IMG_BASE_URL = `https://image.tmdb.org/t/p`;\n\nexport const searchImages = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w400${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport const searchCastImage = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w200${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport async function searchMovies(query) {\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      query: `${query}`,\n      include_adult: 'false',\n      // page: `${currentPage}`,\n    },\n  });\n\n  return data;\n}\n\nexport async function getTrending() {\n  const { data } = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: `${API_KEY}`,\n      page: 1,\n    },\n  });\n  return data;\n}\n\nexport async function getMovieDetails(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieCast(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data;\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSettings = {\n  theme: 'colored',\n};\n\nexport const toastSuccess = () => {\n  return toast.success(\n    'Hooray! We found what you were looking for ðŸ¤—',\n    toastSettings\n  );\n};\nexport const toastInfoNothing = () => {\n  return toast.info(\n    'It looks like you want to find nothing, please check your query ðŸ˜•',\n    toastSettings\n  );\n};\nexport const toastInfoDuplication = () => {\n  return toast.info(\n    'It looks like there are already movies found for your request, please check if this will be a new search ðŸ¤”',\n    toastSettings\n  );\n};\nexport const toastWarn = () => {\n  return toast.warn(\n    'Sorry, nothing was found for your request, try something else ðŸ™ˆ',\n    toastSettings\n  );\n};\nexport const toastError = () => {\n  return toast.error(\n    'Oops, something went wrong, please try again ðŸ™Š',\n    toastSettings\n  );\n};\n","import styled from 'styled-components';\n\nexport const MoviesForm = styled.form`\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 20px 0px;\n\n    button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: ${p => p.theme.colors.bg_dark};\n      height: 48px;\n      width: 80px;\n      border-radius: 5px;\n      margin: 0 6px;\n      color: ${p => p.theme.colors.text};\n      border: ${p => p.theme.borders.none};\n\n      &:hover {\n        color: ${p => p.theme.colors.primary};\n      }\n    }\n  }\n\n  & input {\n    display: block;\n    text-align: center;\n    font-size: ${p => p.theme.fontSizes.m};\n\n    height: 48px;\n    width: 300px;\n\n    border-radius: 5px;\n    border: ${p => p.theme.borders.none};\n\n    ::placeholder {\n      font-size: ${p => p.theme.fontSizes.m};\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { searchMovies } from '../../components/services/searchApi';\n\nimport FilmsList from '../../components/FilmsList/FilmsList';\nimport {\n  toastInfoNothing,\n  toastError,\n  toastSuccess,\n} from '../../components/services/toasts';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { ThreeCirclesStyle } from '../../components/services/spinner';\n\nimport { MoviesForm } from './Movies.styled';\n// import { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setloading] = useState(false);\n\n  // const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    searchMovies(query).then(res => {\n      console.log(res);\n      setloading(true);\n\n      if (res.total_results === 0) {\n        toastInfoNothing();\n      }\n      if (res.total_results > 0) {\n        toastSuccess();\n      }\n\n      setTimeout(() => {\n        searchMovies(query.trim())\n          .then(res => {\n            console.log(res);\n            setMovies(res.results);\n          })\n          .catch(toastError)\n          .finally(() => {\n            setloading(false);\n          });\n      }, 300);\n    });\n\n    setloading(false);\n  }, [query]);\n\n  return (\n    <>\n      <main style={{ flexGrow: '1' }}>\n        <MoviesForm\n          onSubmit={event => {\n            event.preventDefault();\n            setQuery(event.currentTarget.querySelector('input').value);\n            console.log(query);\n          }}\n        >\n          <div>\n            <input\n              text=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              type=\"search\"\n              // onChange={event => setQuery(event.currentTarget.value)}\n              placeholder=\"SEARCH MOVIE...\"\n            />\n            <button type=\"submit\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 32 32\"\n              >\n                <path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"></path>\n              </svg>\n            </button>\n          </div>\n          {loading && <ThreeCircles {...ThreeCirclesStyle} />}\n          {movies !== false && <FilmsList data={movies} />}\n        </MoviesForm>\n      </main>\n    </>\n  );\n}\n"],"names":["FilmsListStyled","styled","p","theme","space","FilmsListItem","fontSizes","m","transition","cubicBezier","transform","scaleFirst","FilmsList","data","map","id","title","poster_path","imgPoster","searchImages","console","log","to","src","alt","API_KEY","BASE_URL","IMG_BASE_URL","poster","searchMovies","query","axios","params","api_key","language","include_adult","getTrending","page","getMovieDetails","getMovieCast","getMovieReviews","toastSettings","toastSuccess","toast","toastInfoNothing","toastError","MoviesForm","colors","bg_dark","text","borders","none","primary","Movies","useState","setQuery","movies","setMovies","loading","setloading","useEffect","then","res","total_results","setTimeout","trim","results","catch","finally","style","flexGrow","onSubmit","event","preventDefault","currentTarget","querySelector","value","autoComplete","autoFocus","type","placeholder","xmlns","width","height","fill","viewBox","d","ThreeCirclesStyle"],"sourceRoot":""}